events {
    worker_connections 1024;
}

http {
     # Configuración para subida de archivos grandes
    client_max_body_size 500M;  # Tamaño máximo permitido para el cuerpo de la solicitud
    client_body_timeout 300s;   # Tiempo máximo para recibir el cuerpo de la solicitud
    proxy_read_timeout 300s;    # Tiempo máximo de espera para lectura desde backend
    
    # Redirige HTTP a HTTPS
    server {
        listen 80;
        server_name api.sordomundo.pro;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Servidor HTTP para el proxy inverso
    server {
        listen 443 ssl;
        server_name api.sordomundo.pro;

        ssl_certificate /etc/nginx/ssl/cloudflare-cert.pem;
        ssl_certificate_key /etc/nginx/ssl/cloudflare-key.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        
        # Ajustes específicos para subida de archivos
        client_max_body_size 500M;  # Sobreescribe el valor global si es necesario
        client_body_buffer_size 100k;
        client_body_temp_path /tmp/nginx 1 2;

        # Redirigir las solicitudes de la API al backend
        location / {
            proxy_pass http://backend:5000;  # Redirige al contenedor backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_cache_bypass $http_upgrade;
        }

        # Configuración para servir archivos estáticos desde /datos
        location /datos/ {
            # Ruta donde Nginx buscará los archivos estáticos en el contenedor
            root /app/;  # Asegúrate de que '/app/' sea la ruta correcta dentro de tu contenedor backend
            try_files $uri $uri/ =404;  # Devuelve un 404 si el archivo no existe
        }

        # Página de error personalizada
        error_page 404 /404.html;
    }
}
